# Generated by Django 4.2.3 on 2023-07-18 07:14
import uuid

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import simple_history.models
from django.conf import settings
from django.db import migrations
from django.db import models

import customers.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name="created"),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name="modified"),
                ),
                (
                    "id",
                    model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("lead", "LEAD"),
                            ("order", "ORDER"),
                            ("upload_file", "UPLOAD_FILE"),
                            ("other", "OTHER"),
                        ],
                        default=customers.enums.SourceLead["OTHER"],
                        max_length=11,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                ("birthday", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("female", "FEMALE"), ("male", "MALE"), ("other", "OTHER")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("customer_note", models.CharField(blank=True, max_length=255, null=True)),
                ("ecommerce_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "ranking",
                    models.CharField(
                        blank=True,
                        choices=[("sliver", "SILVER"), ("gold", "GOLD"), ("diamond", "DIAMOND"), ("vip", "VIP")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("latest_up_rank_date", models.DateField(blank=True, null=True)),
                ("total_order", models.IntegerField(blank=True, default=0, null=True)),
                ("total_spent", models.FloatField(blank=True, default=0, null=True)),
                ("last_order_id", models.CharField(blank=True, max_length=255, null=True)),
                ("last_order_time", models.DateTimeField(blank=True, null=True)),
                ("last_shipping_completed", models.DateTimeField(blank=True, null=True)),
                ("care_start_time", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="customer_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer_care_staff",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customer_care_staff",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tbl_Customers",
            },
        ),
        migrations.CreateModel(
            name="CustomerGroup",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "tbl_Customers_Group",
            },
        ),
        migrations.CreateModel(
            name="CustomerTag",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "tbl_Customers_Tag",
            },
        ),
        migrations.CreateModel(
            name="HistoricalCustomer",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name="created"),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name="modified"),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("lead", "LEAD"),
                            ("order", "ORDER"),
                            ("upload_file", "UPLOAD_FILE"),
                            ("other", "OTHER"),
                        ],
                        default=customers.enums.SourceLead["OTHER"],
                        max_length=11,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                ("birthday", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("female", "FEMALE"), ("male", "MALE"), ("other", "OTHER")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("customer_note", models.CharField(blank=True, max_length=255, null=True)),
                ("ecommerce_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "ranking",
                    models.CharField(
                        blank=True,
                        choices=[("sliver", "SILVER"), ("gold", "GOLD"), ("diamond", "DIAMOND"), ("vip", "VIP")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("latest_up_rank_date", models.DateField(blank=True, null=True)),
                ("total_order", models.IntegerField(blank=True, default=0, null=True)),
                ("total_spent", models.FloatField(blank=True, default=0, null=True)),
                ("last_order_id", models.CharField(blank=True, max_length=255, null=True)),
                ("last_order_time", models.DateTimeField(blank=True, null=True)),
                ("last_shipping_completed", models.DateTimeField(blank=True, null=True)),
                ("care_start_time", models.DateTimeField(blank=True, null=True)),
                ("history_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer_care_staff",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_care_staff_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical customer",
                "verbose_name_plural": "historical customers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="CustomerTagDetail",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
                ),
                ("customer", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="customers.customer")),
                (
                    "customer_tag",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="customers.customertag"),
                ),
            ],
            options={
                "db_table": "tbl_Customers_Tag_Detail",
            },
        ),
        migrations.CreateModel(
            name="CustomerPhone",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
                ),
                ("phone", models.CharField(max_length=15, unique=True)),
                ("number_of_times", models.IntegerField(default=1)),
                (
                    "customer",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="phones", to="customers.customer"),
                ),
            ],
            options={
                "db_table": "tbl_Customerss_Phone",
            },
        ),
        migrations.CreateModel(
            name="CustomerGroupDetail",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
                ),
                ("customer", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="customers.customer")),
                (
                    "customer_group",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="customers.customergroup"),
                ),
            ],
            options={
                "db_table": "tbl_Customers_Group_Detail",
            },
        ),
        migrations.CreateModel(
            name="CustomerAdress",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
                ),
                ("address", models.CharField(max_length=255)),
                ("number_of_times", models.IntegerField(default=1)),
                (
                    "customer",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="addresses", to="customers.customer"),
                ),
            ],
            options={
                "db_table": "tbl_Customers_Address",
            },
        ),
        migrations.AddField(
            model_name="customer",
            name="groups",
            field=models.ManyToManyField(through="customers.CustomerGroupDetail", to="customers.customergroup"),
        ),
        migrations.AddField(
            model_name="customer",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="customer_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="customer",
            name="modified_care_staff_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="customer_care_staff_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="customer",
            name="tags",
            field=models.ManyToManyField(through="customers.CustomerTagDetail", to="customers.customertag"),
        ),
        migrations.AddConstraint(
            model_name="customerphone",
            constraint=models.UniqueConstraint(fields=("customer", "phone"), name="unique_customer_phone"),
        ),
        migrations.AddConstraint(
            model_name="customeradress",
            constraint=models.UniqueConstraint(fields=("customer", "address"), name="unique_customer_address"),
        ),
    ]
